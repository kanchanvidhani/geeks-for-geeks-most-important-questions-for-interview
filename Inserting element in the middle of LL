Given a linked list of size N and a key. The task is to insert the key in the middle of the linked list.

Example 1:

Input:
LinkedList = 1->2->4
key = 3
Output: 1 2 3 4
Explanation: The new element is inserted
after the current middle element in the
linked list.
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class Solution {
    
    /*public Node insertInMid(Node head, int data){
    
     Node tur = head;
     Node n= head.next; 
     while(n!=null && n.next!=null){
        tur =n.next;//tur will be ur mid
        n = n.next.next;
     }
     Node newNode = new Node(data);
     newNode.next=tur.next ;
      tur.next=newNode;
     return head;
    }
}
*/
public Node insertInMid(Node head, int data){
       //Insert code here, return the head of modified linked list
      Node temp= new Node(data);
      if(head==null)
      return temp;
      
      Node slw=head,fst=head.next;
      while(fst!=null && fst.next!=null)
      {
          slw=slw.next;
          fst=fst.next.next;
      }
      temp.next=slw.next;
      slw.next=temp;
      return head;
       }
       
       
       
}
