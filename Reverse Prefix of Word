Given a 0-indexed string word and a character ch, reverse the segment of word that starts at index 0 and ends at the index of the first occurrence of ch (inclusive). If the character ch does not exist in word, do nothing.

For example, if word = "abcdefd" and ch = "d", then you should reverse the segment that starts at 0 and ends at 3 (inclusive). The resulting string will be "dcbaefd".
Return the resulting string.

 

Example 1:

Input: word = "abcdefd", ch = "d"
Output: "dcbaefd"
Explanation: The first occurrence of "d" is at index 3. 
Reverse the part of word from 0 to 3 (inclusive), the resulting string is "dcbaefd".
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



class Solution {
    public String reversePrefix(String word, char ch) {
        StringBuilder s =new StringBuilder();
        
        char find = '\u0000';
        int i=0;
        while(find != ch && i< word.length()){
            if(word.charAt(i) != ch){
                s.append(word.charAt(i));
            }
            find =word.charAt(i);
            i++;
        }
        if(find==ch){
            s.append(find);
        }else if(find!=ch){
            return word;
        }
        s.reverse();
        String ans ="";
        ans = s+word.substring(i);
        return ans;
    }
}
